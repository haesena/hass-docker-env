FROM nginx

ARG domain

# prepare filestructure for nginx configuration and letsencrypt
RUN mkdir -m 777 -p /etc/nginx/ssl \
					/etc/nginx/sites-available \
					/var/www/letsencrypt/.well-known/acme-challenge \
					/etc/letsencrypt/live/haesen.duckdns.org

# we first need to start nginx before we can run the certbot. We create a temporary self-signed 
# certificate so that nginx does not produce an error because the certificate is missing
RUN apt-get update && \
	apt-get install --yes --no-install-recommends openssl && \
	openssl req -x509 -nodes -newkey rsa:2048 \
			-subj "/C=FR/ST=Alsace/L=St-Louis/O=Haesen/CN=www.haesen.duckdns.com" \
			-keyout privkey.pem -out fullchain.pem -days 9999 && \
	openssl rsa -in privkey.pem -out privkey.pem && \
	mv privkey.pem fullchain.pem /etc/letsencrypt/live/haesen.duckdns.org

COPY ./nginx.conf /etc/nginx/
COPY ./dhparams.pem /etc/nginx/ssl/
COPY ./hass.https.conf /etc/nginx/sites-available/
COPY ./mqtt.conf /etc/nginx/sites-available/

# if the copied dhparams.pem file is empty (default), remove it and create a valid one. 
# This way, the user can replace the empty dhparams.pem file with a valid one, to skip this step 
RUN [ -s /etc/nginx/ssl/dhparams.pem ] || (rm /etc/nginx/ssl/dhparams.pem && openssl dhparam -out dhparams.pem 2048)

# In the copied configuration file, insert the domain-name in the path for the letsencrypt certificates
# then link this configuration file as default
RUN sed -i 's@#DOMAIN#@'$domain'@g' /etc/nginx/sites-available/hass.https.conf && \
	sed -i 's@#DOMAIN#@'$domain'@g' /etc/nginx/sites-available/mqtt.conf && \
	rm /etc/nginx/conf.d/default.conf && \
	ln -s /etc/nginx/sites-available/hass.https.conf /etc/nginx/conf.d/default.conf

CMD nginx -g "daemon off;"